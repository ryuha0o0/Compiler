Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | ε

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' INTEGER_CONST ']' ';'
    6        | struct_specifier ';'
    7        | func_decl compound_stmt

    8 type_specifier: TYPE
    9               | struct_specifier

   10 $@1: ε

   11 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   12                 | STRUCT ID

   13 $@2: ε

   14 func_decl: type_specifier pointers ID '(' $@2 ')'

   15 $@3: ε

   16 func_decl: type_specifier pointers ID '(' $@3 param_list ')'

   17 pointers: '*'
   18         | ε

   19 param_list: param_decl
   20           | param_list ',' param_decl

   21 param_decl: type_specifier pointers ID
   22           | type_specifier pointers ID '[' INTEGER_CONST ']'

   23 def_list: def_list def
   24         | ε

   25 def: type_specifier pointers ID ';'
   26    | type_specifier pointers ID '[' INTEGER_CONST ']' ';'

   27 $@4: ε

   28 compound_stmt: '{' $@4 def_list stmt_list '}'

   29 stmt_list: stmt_list stmt
   30          | ε

   31 stmt: expr ';'
   32     | RETURN expr ';'
   33     | BREAK ';'
   34     | CONTINUE ';'
   35     | ';'
   36     | compound_stmt
   37     | IF '(' expr ')' stmt
   38     | IF '(' expr ')' stmt ELSE stmt
   39     | WHILE '(' expr ')' stmt
   40     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt

   41 expr_e: expr
   42       | ε

   43 expr: unary '=' expr
   44     | binary

   45 binary: binary RELOP binary
   46       | binary EQUOP binary
   47       | binary '+' binary
   48       | binary '-' binary
   49       | binary '*' binary
   50       | binary '/' binary
   51       | binary '%' binary
   52       | unary
   53       | binary LOGICAL_AND binary
   54       | binary LOGICAL_OR binary

   55 unary: '(' expr ')'
   56      | '(' unary ')'
   57      | INTEGER_CONST
   58      | CHAR_CONST
   59      | STRING
   60      | ID
   61      | '-' unary
   62      | '!' unary
   63      | unary INCOP
   64      | unary DECOP
   65      | INCOP unary
   66      | DECOP unary
   67      | '&' unary
   68      | '*' unary
   69      | unary '[' expr ']'
   70      | unary '.' ID
   71      | unary STRUCTOP ID
   72      | unary '(' args ')'
   73      | unary '(' ')'
   74      | SYM_NULL

   75 args: expr
   76     | args ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 62
    '%' (37) 51
    '&' (38) 67
    '(' (40) 14 16 37 38 39 40 55 56 72 73
    ')' (41) 14 16 37 38 39 40 55 56 72 73
    '*' (42) 17 49 68
    '+' (43) 47
    ',' (44) 20 76
    '-' (45) 48 61
    '.' (46) 70
    '/' (47) 50
    ';' (59) 4 5 6 25 26 31 32 33 34 35 40
    '=' (61) 43
    '[' (91) 5 22 26 69
    ']' (93) 5 22 26 69
    '{' (123) 11 28
    '}' (125) 11 28
    error (256)
    STRUCT (258) 11 12
    RETURN (259) 32
    WHILE (260) 39
    FOR (261) 40
    BREAK (262) 33
    CONTINUE (263) 34
    SYM_NULL (264) 74
    TYPE <intVal> (265) 8
    IF (266) 37 38
    ELSE (267) 38
    CHAR_CONST (268) 58
    STRING (269) 59
    LOGICAL_AND (270) 53
    LOGICAL_OR (271) 54
    RELOP (272) 45
    EQUOP (273) 46
    INCOP (274) 63 65
    DECOP (275) 64 66
    STRUCTOP (276) 71
    INTEGER_CONST <intVal> (277) 5 22 26 57
    ID <stringVal> (278) 4 5 11 12 14 16 21 22 25 26 60 70 71


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    ext_def_list (43)
        on left: 2 3
        on right: 1 2
    ext_def (44)
        on left: 4 5 6 7
        on right: 2
    type_specifier <typeVal> (45)
        on left: 8 9
        on right: 4 5 14 16 21 22 25 26
    struct_specifier <typeVal> (46)
        on left: 11 12
        on right: 6 9
    $@1 (47)
        on left: 10
        on right: 11
    func_decl <typeVal> (48)
        on left: 14 16
        on right: 7
    $@2 (49)
        on left: 13
        on right: 14
    $@3 (50)
        on left: 15
        on right: 16
    pointers <intVal> (51)
        on left: 17 18
        on right: 4 5 14 16 21 22 25 26
    param_list <typeVal> (52)
        on left: 19 20
        on right: 16 20
    param_decl <typeVal> (53)
        on left: 21 22
        on right: 19 20
    def_list (54)
        on left: 23 24
        on right: 11 23 28
    def (55)
        on left: 25 26
        on right: 23
    compound_stmt (56)
        on left: 28
        on right: 7 36
    $@4 (57)
        on left: 27
        on right: 28
    stmt_list (58)
        on left: 29 30
        on right: 28 29
    stmt (59)
        on left: 31 32 33 34 35 36 37 38 39 40
        on right: 29 37 38 39 40
    expr_e (60)
        on left: 41 42
        on right: 40
    expr <typeVal> (61)
        on left: 43 44
        on right: 31 32 37 38 39 41 43 55 69 75 76
    binary <typeVal> (62)
        on left: 45 46 47 48 49 50 51 52 53 54
        on right: 44 45 46 47 48 49 50 51 53 54
    unary <typeVal> (63)
        on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 43 52 56 61 62 63 64 65 66 67 68 69 70 71 72 73
    args <argVal> (64)
        on left: 75 76
        on right: 72 76


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list •
    2 ext_def_list: ext_def_list • ext_def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    $default  reduce using rule 1 (program)

    ext_def           go to state 6
    type_specifier    go to state 7
    struct_specifier  go to state 8
    func_decl         go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

   11 struct_specifier: STRUCT • ID '{' $@1 def_list '}'
   12                 | STRUCT • ID

    ID  shift, and go to state 10


State 5

    8 type_specifier: TYPE •

    $default  reduce using rule 8 (type_specifier)


State 6

    2 ext_def_list: ext_def_list ext_def •

    $default  reduce using rule 2 (ext_def_list)


State 7

    4 ext_def: type_specifier • pointers ID ';'
    5        | type_specifier • pointers ID '[' INTEGER_CONST ']' ';'
   14 func_decl: type_specifier • pointers ID '(' $@2 ')'
   16          | type_specifier • pointers ID '(' $@3 param_list ')'

    '*'  shift, and go to state 11

    $default  reduce using rule 18 (pointers)

    pointers  go to state 12


State 8

    6 ext_def: struct_specifier • ';'
    9 type_specifier: struct_specifier •

    ';'  shift, and go to state 13

    $default  reduce using rule 9 (type_specifier)


State 9

    7 ext_def: func_decl • compound_stmt

    '{'  shift, and go to state 14

    compound_stmt  go to state 15


State 10

   11 struct_specifier: STRUCT ID • '{' $@1 def_list '}'
   12                 | STRUCT ID •

    '{'  shift, and go to state 16

    $default  reduce using rule 12 (struct_specifier)


State 11

   17 pointers: '*' •

    $default  reduce using rule 17 (pointers)


State 12

    4 ext_def: type_specifier pointers • ID ';'
    5        | type_specifier pointers • ID '[' INTEGER_CONST ']' ';'
   14 func_decl: type_specifier pointers • ID '(' $@2 ')'
   16          | type_specifier pointers • ID '(' $@3 param_list ')'

    ID  shift, and go to state 17


State 13

    6 ext_def: struct_specifier ';' •

    $default  reduce using rule 6 (ext_def)


State 14

   28 compound_stmt: '{' • $@4 def_list stmt_list '}'

    $default  reduce using rule 27 ($@4)

    $@4  go to state 18


State 15

    7 ext_def: func_decl compound_stmt •

    $default  reduce using rule 7 (ext_def)


State 16

   11 struct_specifier: STRUCT ID '{' • $@1 def_list '}'

    $default  reduce using rule 10 ($@1)

    $@1  go to state 19


State 17

    4 ext_def: type_specifier pointers ID • ';'
    5        | type_specifier pointers ID • '[' INTEGER_CONST ']' ';'
   14 func_decl: type_specifier pointers ID • '(' $@2 ')'
   16          | type_specifier pointers ID • '(' $@3 param_list ')'

    '['  shift, and go to state 20
    '('  shift, and go to state 21
    ';'  shift, and go to state 22


State 18

   28 compound_stmt: '{' $@4 • def_list stmt_list '}'

    $default  reduce using rule 24 (def_list)

    def_list  go to state 23


State 19

   11 struct_specifier: STRUCT ID '{' $@1 • def_list '}'

    $default  reduce using rule 24 (def_list)

    def_list  go to state 24


State 20

    5 ext_def: type_specifier pointers ID '[' • INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 25


State 21

   14 func_decl: type_specifier pointers ID '(' • $@2 ')'
   16          | type_specifier pointers ID '(' • $@3 param_list ')'

    ')'       reduce using rule 13 ($@2)
    $default  reduce using rule 15 ($@3)

    $@2  go to state 26
    $@3  go to state 27


State 22

    4 ext_def: type_specifier pointers ID ';' •

    $default  reduce using rule 4 (ext_def)


State 23

   23 def_list: def_list • def
   28 compound_stmt: '{' $@4 def_list • stmt_list '}'

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    $default  reduce using rule 30 (stmt_list)

    type_specifier    go to state 28
    struct_specifier  go to state 29
    def               go to state 30
    stmt_list         go to state 31


State 24

   11 struct_specifier: STRUCT ID '{' $@1 def_list • '}'
   23 def_list: def_list • def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    '}'     shift, and go to state 32

    type_specifier    go to state 28
    struct_specifier  go to state 29
    def               go to state 30


State 25

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST • ']' ';'

    ']'  shift, and go to state 33


State 26

   14 func_decl: type_specifier pointers ID '(' $@2 • ')'

    ')'  shift, and go to state 34


State 27

   16 func_decl: type_specifier pointers ID '(' $@3 • param_list ')'

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    type_specifier    go to state 35
    struct_specifier  go to state 29
    param_list        go to state 36
    param_decl        go to state 37


State 28

   25 def: type_specifier • pointers ID ';'
   26    | type_specifier • pointers ID '[' INTEGER_CONST ']' ';'

    '*'  shift, and go to state 11

    $default  reduce using rule 18 (pointers)

    pointers  go to state 38


State 29

    9 type_specifier: struct_specifier •

    $default  reduce using rule 9 (type_specifier)


State 30

   23 def_list: def_list def •

    $default  reduce using rule 23 (def_list)


State 31

   28 compound_stmt: '{' $@4 def_list stmt_list • '}'
   29 stmt_list: stmt_list • stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    RETURN         shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    SYM_NULL       shift, and go to state 49
    IF             shift, and go to state 50
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14
    '}'            shift, and go to state 58

    compound_stmt  go to state 59
    stmt           go to state 60
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 32

   11 struct_specifier: STRUCT ID '{' $@1 def_list '}' •

    $default  reduce using rule 11 (struct_specifier)


State 33

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' • ';'

    ';'  shift, and go to state 64


State 34

   14 func_decl: type_specifier pointers ID '(' $@2 ')' •

    $default  reduce using rule 14 (func_decl)


State 35

   21 param_decl: type_specifier • pointers ID
   22           | type_specifier • pointers ID '[' INTEGER_CONST ']'

    '*'  shift, and go to state 11

    $default  reduce using rule 18 (pointers)

    pointers  go to state 65


State 36

   16 func_decl: type_specifier pointers ID '(' $@3 param_list • ')'
   20 param_list: param_list • ',' param_decl

    ','  shift, and go to state 66
    ')'  shift, and go to state 67


State 37

   19 param_list: param_decl •

    $default  reduce using rule 19 (param_list)


State 38

   25 def: type_specifier pointers • ID ';'
   26    | type_specifier pointers • ID '[' INTEGER_CONST ']' ';'

    ID  shift, and go to state 68


State 39

   61 unary: '-' • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 69


State 40

   68 unary: '*' • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 70


State 41

   62 unary: '!' • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 71


State 42

   67 unary: '&' • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 72


State 43

   55 unary: '(' • expr ')'
   56      | '(' • unary ')'

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 73
    binary  go to state 62
    unary   go to state 74


State 44

   32 stmt: RETURN • expr ';'

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 75
    binary  go to state 62
    unary   go to state 63


State 45

   39 stmt: WHILE • '(' expr ')' stmt

    '('  shift, and go to state 76


State 46

   40 stmt: FOR • '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 77


State 47

   33 stmt: BREAK • ';'

    ';'  shift, and go to state 78


State 48

   34 stmt: CONTINUE • ';'

    ';'  shift, and go to state 79


State 49

   74 unary: SYM_NULL •

    $default  reduce using rule 74 (unary)


State 50

   37 stmt: IF • '(' expr ')' stmt
   38     | IF • '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 80


State 51

   58 unary: CHAR_CONST •

    $default  reduce using rule 58 (unary)


State 52

   59 unary: STRING •

    $default  reduce using rule 59 (unary)


State 53

   65 unary: INCOP • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 81


State 54

   66 unary: DECOP • unary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    unary  go to state 82


State 55

   57 unary: INTEGER_CONST •

    $default  reduce using rule 57 (unary)


State 56

   60 unary: ID •

    $default  reduce using rule 60 (unary)


State 57

   35 stmt: ';' •

    $default  reduce using rule 35 (stmt)


State 58

   28 compound_stmt: '{' $@4 def_list stmt_list '}' •

    $default  reduce using rule 28 (compound_stmt)


State 59

   36 stmt: compound_stmt •

    $default  reduce using rule 36 (stmt)


State 60

   29 stmt_list: stmt_list stmt •

    $default  reduce using rule 29 (stmt_list)


State 61

   31 stmt: expr • ';'

    ';'  shift, and go to state 83


State 62

   44 expr: binary •
   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   48       | binary • '-' binary
   49       | binary • '*' binary
   50       | binary • '/' binary
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary

    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    LOGICAL_AND  shift, and go to state 89
    LOGICAL_OR   shift, and go to state 90
    RELOP        shift, and go to state 91
    EQUOP        shift, and go to state 92

    $default  reduce using rule 44 (expr)


State 63

   43 expr: unary • '=' expr
   52 binary: unary •
   63 unary: unary • INCOP
   64      | unary • DECOP
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '='       shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 52 (binary)


State 64

    5 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' •

    $default  reduce using rule 5 (ext_def)


State 65

   21 param_decl: type_specifier pointers • ID
   22           | type_specifier pointers • ID '[' INTEGER_CONST ']'

    ID  shift, and go to state 100


State 66

   20 param_list: param_list ',' • param_decl

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5

    type_specifier    go to state 35
    struct_specifier  go to state 29
    param_decl        go to state 101


State 67

   16 func_decl: type_specifier pointers ID '(' $@3 param_list ')' •

    $default  reduce using rule 16 (func_decl)


State 68

   25 def: type_specifier pointers ID • ';'
   26    | type_specifier pointers ID • '[' INTEGER_CONST ']' ';'

    '['  shift, and go to state 102
    ';'  shift, and go to state 103


State 69

   61 unary: '-' unary •
   63      | unary • INCOP
   64      | unary • DECOP
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 61 (unary)


State 70

   63 unary: unary • INCOP
   64      | unary • DECOP
   68      | '*' unary •
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 68 (unary)


State 71

   62 unary: '!' unary •
   63      | unary • INCOP
   64      | unary • DECOP
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 62 (unary)


State 72

   63 unary: unary • INCOP
   64      | unary • DECOP
   67      | '&' unary •
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 67 (unary)


State 73

   55 unary: '(' expr • ')'

    ')'  shift, and go to state 104


State 74

   43 expr: unary • '=' expr
   52 binary: unary •
   56 unary: '(' unary • ')'
   63      | unary • INCOP
   64      | unary • DECOP
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '='       shift, and go to state 93
    '['       shift, and go to state 94
    '('       shift, and go to state 95
    ')'       shift, and go to state 105
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 52 (binary)


State 75

   32 stmt: RETURN expr • ';'

    ';'  shift, and go to state 106


State 76

   39 stmt: WHILE '(' • expr ')' stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 107
    binary  go to state 62
    unary   go to state 63


State 77

   40 stmt: FOR '(' • expr_e ';' expr_e ';' expr_e ')' stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    $default  reduce using rule 42 (expr_e)

    expr_e  go to state 108
    expr    go to state 109
    binary  go to state 62
    unary   go to state 63


State 78

   33 stmt: BREAK ';' •

    $default  reduce using rule 33 (stmt)


State 79

   34 stmt: CONTINUE ';' •

    $default  reduce using rule 34 (stmt)


State 80

   37 stmt: IF '(' • expr ')' stmt
   38     | IF '(' • expr ')' stmt ELSE stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 110
    binary  go to state 62
    unary   go to state 63


State 81

   63 unary: unary • INCOP
   64      | unary • DECOP
   65      | INCOP unary •
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 65 (unary)


State 82

   63 unary: unary • INCOP
   64      | unary • DECOP
   66      | DECOP unary •
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 66 (unary)


State 83

   31 stmt: expr ';' •

    $default  reduce using rule 31 (stmt)


State 84

   47 binary: binary '+' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 111
    unary   go to state 112


State 85

   48 binary: binary '-' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 113
    unary   go to state 112


State 86

   49 binary: binary '*' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 114
    unary   go to state 112


State 87

   50 binary: binary '/' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 115
    unary   go to state 112


State 88

   51 binary: binary '%' • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 116
    unary   go to state 112


State 89

   53 binary: binary LOGICAL_AND • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 117
    unary   go to state 112


State 90

   54 binary: binary LOGICAL_OR • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 118
    unary   go to state 112


State 91

   45 binary: binary RELOP • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 119
    unary   go to state 112


State 92

   46 binary: binary EQUOP • binary

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    binary  go to state 120
    unary   go to state 112


State 93

   43 expr: unary '=' • expr

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 121
    binary  go to state 62
    unary   go to state 63


State 94

   69 unary: unary '[' • expr ']'

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 122
    binary  go to state 62
    unary   go to state 63


State 95

   72 unary: unary '(' • args ')'
   73      | unary '(' • ')'

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    ')'            shift, and go to state 123
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 124
    binary  go to state 62
    unary   go to state 63
    args    go to state 125


State 96

   70 unary: unary '.' • ID

    ID  shift, and go to state 126


State 97

   63 unary: unary INCOP •

    $default  reduce using rule 63 (unary)


State 98

   64 unary: unary DECOP •

    $default  reduce using rule 64 (unary)


State 99

   71 unary: unary STRUCTOP • ID

    ID  shift, and go to state 127


State 100

   21 param_decl: type_specifier pointers ID •
   22           | type_specifier pointers ID • '[' INTEGER_CONST ']'

    '['  shift, and go to state 128

    $default  reduce using rule 21 (param_decl)


State 101

   20 param_list: param_list ',' param_decl •

    $default  reduce using rule 20 (param_list)


State 102

   26 def: type_specifier pointers ID '[' • INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 129


State 103

   25 def: type_specifier pointers ID ';' •

    $default  reduce using rule 25 (def)


State 104

   55 unary: '(' expr ')' •

    $default  reduce using rule 55 (unary)


State 105

   56 unary: '(' unary ')' •

    $default  reduce using rule 56 (unary)


State 106

   32 stmt: RETURN expr ';' •

    $default  reduce using rule 32 (stmt)


State 107

   39 stmt: WHILE '(' expr • ')' stmt

    ')'  shift, and go to state 130


State 108

   40 stmt: FOR '(' expr_e • ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 131


State 109

   41 expr_e: expr •

    $default  reduce using rule 41 (expr_e)


State 110

   37 stmt: IF '(' expr • ')' stmt
   38     | IF '(' expr • ')' stmt ELSE stmt

    ')'  shift, and go to state 132


State 111

   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   47       | binary '+' binary •
   48       | binary • '-' binary
   49       | binary • '*' binary
   50       | binary • '/' binary
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 47 (binary)


State 112

   52 binary: unary •
   63 unary: unary • INCOP
   64      | unary • DECOP
   69      | unary • '[' expr ']'
   70      | unary • '.' ID
   71      | unary • STRUCTOP ID
   72      | unary • '(' args ')'
   73      | unary • '(' ')'

    '['       shift, and go to state 94
    '('       shift, and go to state 95
    '.'       shift, and go to state 96
    INCOP     shift, and go to state 97
    DECOP     shift, and go to state 98
    STRUCTOP  shift, and go to state 99

    $default  reduce using rule 52 (binary)


State 113

   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   48       | binary • '-' binary
   48       | binary '-' binary •
   49       | binary • '*' binary
   50       | binary • '/' binary
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 48 (binary)


State 114

   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   48       | binary • '-' binary
   49       | binary • '*' binary
   49       | binary '*' binary •
   50       | binary • '/' binary
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary

    $default  reduce using rule 49 (binary)


State 115

   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   48       | binary • '-' binary
   49       | binary • '*' binary
   50       | binary • '/' binary
   50       | binary '/' binary •
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary

    $default  reduce using rule 50 (binary)


State 116

   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   48       | binary • '-' binary
   49       | binary • '*' binary
   50       | binary • '/' binary
   51       | binary • '%' binary
   51       | binary '%' binary •
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary

    $default  reduce using rule 51 (binary)


State 117

   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   48       | binary • '-' binary
   49       | binary • '*' binary
   50       | binary • '/' binary
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   53       | binary LOGICAL_AND binary •
   54       | binary • LOGICAL_OR binary

    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    '%'    shift, and go to state 88
    RELOP  shift, and go to state 91
    EQUOP  shift, and go to state 92

    $default  reduce using rule 53 (binary)


State 118

   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   48       | binary • '-' binary
   49       | binary • '*' binary
   50       | binary • '/' binary
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary
   54       | binary LOGICAL_OR binary •

    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    LOGICAL_AND  shift, and go to state 89
    RELOP        shift, and go to state 91
    EQUOP        shift, and go to state 92

    $default  reduce using rule 54 (binary)


State 119

   45 binary: binary • RELOP binary
   45       | binary RELOP binary •
   46       | binary • EQUOP binary
   47       | binary • '+' binary
   48       | binary • '-' binary
   49       | binary • '*' binary
   50       | binary • '/' binary
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 45 (binary)


State 120

   45 binary: binary • RELOP binary
   46       | binary • EQUOP binary
   46       | binary EQUOP binary •
   47       | binary • '+' binary
   48       | binary • '-' binary
   49       | binary • '*' binary
   50       | binary • '/' binary
   51       | binary • '%' binary
   53       | binary • LOGICAL_AND binary
   54       | binary • LOGICAL_OR binary

    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87
    '%'    shift, and go to state 88
    RELOP  shift, and go to state 91

    $default  reduce using rule 46 (binary)


State 121

   43 expr: unary '=' expr •

    $default  reduce using rule 43 (expr)


State 122

   69 unary: unary '[' expr • ']'

    ']'  shift, and go to state 133


State 123

   73 unary: unary '(' ')' •

    $default  reduce using rule 73 (unary)


State 124

   75 args: expr •

    $default  reduce using rule 75 (args)


State 125

   72 unary: unary '(' args • ')'
   76 args: args • ',' expr

    ','  shift, and go to state 134
    ')'  shift, and go to state 135


State 126

   70 unary: unary '.' ID •

    $default  reduce using rule 70 (unary)


State 127

   71 unary: unary STRUCTOP ID •

    $default  reduce using rule 71 (unary)


State 128

   22 param_decl: type_specifier pointers ID '[' • INTEGER_CONST ']'

    INTEGER_CONST  shift, and go to state 136


State 129

   26 def: type_specifier pointers ID '[' INTEGER_CONST • ']' ';'

    ']'  shift, and go to state 137


State 130

   39 stmt: WHILE '(' expr ')' • stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    RETURN         shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    SYM_NULL       shift, and go to state 49
    IF             shift, and go to state 50
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14

    compound_stmt  go to state 59
    stmt           go to state 138
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 131

   40 stmt: FOR '(' expr_e ';' • expr_e ';' expr_e ')' stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    $default  reduce using rule 42 (expr_e)

    expr_e  go to state 139
    expr    go to state 109
    binary  go to state 62
    unary   go to state 63


State 132

   37 stmt: IF '(' expr ')' • stmt
   38     | IF '(' expr ')' • stmt ELSE stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    RETURN         shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    SYM_NULL       shift, and go to state 49
    IF             shift, and go to state 50
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14

    compound_stmt  go to state 59
    stmt           go to state 140
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 133

   69 unary: unary '[' expr ']' •

    $default  reduce using rule 69 (unary)


State 134

   76 args: args ',' • expr

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    expr    go to state 141
    binary  go to state 62
    unary   go to state 63


State 135

   72 unary: unary '(' args ')' •

    $default  reduce using rule 72 (unary)


State 136

   22 param_decl: type_specifier pointers ID '[' INTEGER_CONST • ']'

    ']'  shift, and go to state 142


State 137

   26 def: type_specifier pointers ID '[' INTEGER_CONST ']' • ';'

    ';'  shift, and go to state 143


State 138

   39 stmt: WHILE '(' expr ')' stmt •

    $default  reduce using rule 39 (stmt)


State 139

   40 stmt: FOR '(' expr_e ';' expr_e • ';' expr_e ')' stmt

    ';'  shift, and go to state 144


State 140

   37 stmt: IF '(' expr ')' stmt •
   38     | IF '(' expr ')' stmt • ELSE stmt

    ELSE  shift, and go to state 145

    $default  reduce using rule 37 (stmt)


State 141

   76 args: args ',' expr •

    $default  reduce using rule 76 (args)


State 142

   22 param_decl: type_specifier pointers ID '[' INTEGER_CONST ']' •

    $default  reduce using rule 22 (param_decl)


State 143

   26 def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' •

    $default  reduce using rule 26 (def)


State 144

   40 stmt: FOR '(' expr_e ';' expr_e ';' • expr_e ')' stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    SYM_NULL       shift, and go to state 49
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56

    $default  reduce using rule 42 (expr_e)

    expr_e  go to state 146
    expr    go to state 109
    binary  go to state 62
    unary   go to state 63


State 145

   38 stmt: IF '(' expr ')' stmt ELSE • stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    RETURN         shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    SYM_NULL       shift, and go to state 49
    IF             shift, and go to state 50
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14

    compound_stmt  go to state 59
    stmt           go to state 147
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 146

   40 stmt: FOR '(' expr_e ';' expr_e ';' expr_e • ')' stmt

    ')'  shift, and go to state 148


State 147

   38 stmt: IF '(' expr ')' stmt ELSE stmt •

    $default  reduce using rule 38 (stmt)


State 148

   40 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' • stmt

    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '!'            shift, and go to state 41
    '&'            shift, and go to state 42
    '('            shift, and go to state 43
    RETURN         shift, and go to state 44
    WHILE          shift, and go to state 45
    FOR            shift, and go to state 46
    BREAK          shift, and go to state 47
    CONTINUE       shift, and go to state 48
    SYM_NULL       shift, and go to state 49
    IF             shift, and go to state 50
    CHAR_CONST     shift, and go to state 51
    STRING         shift, and go to state 52
    INCOP          shift, and go to state 53
    DECOP          shift, and go to state 54
    INTEGER_CONST  shift, and go to state 55
    ID             shift, and go to state 56
    ';'            shift, and go to state 57
    '{'            shift, and go to state 14

    compound_stmt  go to state 59
    stmt           go to state 149
    expr           go to state 61
    binary         go to state 62
    unary          go to state 63


State 149

   40 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt •

    $default  reduce using rule 40 (stmt)
